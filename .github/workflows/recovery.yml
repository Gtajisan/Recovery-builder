name: Building recovery

on:
  workflow_dispatch:
    inputs:
      ManifestLink:
        description: 'Link For Minimal Recovery Manifest'
        required: true
        default: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp'
      ManifestBranch:
        description: 'Which Branch Would You Like To Sync'
        required: true
      DTLink:
        description: 'Link For Your Device Tree With Branch Like URL -b BRANCH'
        required: true
      Vendor:
        description: 'Enter Your Device OEM'
        required: true
      Device:
        description: 'Enter Your Device Code Name'
        required: true
      KernelLink:
        description: 'Link For Your Kernel Source With Branch Like URL -b BRANCH'
      KernelPath:
        description: 'Path Where You To Clone Your Kernel Source'
      LunchCMD:
        description: 'Enter Lunch Command like lunch omni_$device-eng or lunch twrp_$device-eng'
        required: true
        default: 'lunch twrp_$DEVICE-eng'
      BuildCMD:
        description: 'Enter Build Command m recoveryimage or m bootimage'
        required: true
        default: 'mka recoveryimage'

env:
  MANIFEST: ${{ github.event.inputs.ManifestLink }}
  MANIFEST_BRANCH: ${{ github.event.inputs.ManifestBranch }}
  DT_LINK: ${{ github.event.inputs.DTLink }}
  VENDOR: ${{ github.event.inputs.Vendor }}
  DEVICE: ${{ github.event.inputs.Device }}
  KERNEL_LINK: ${{ github.event.inputs.KernelLink }}
  KERNEL_PATH: ${{ github.event.inputs.KernelPath }}
  LUNCHCMD: ${{ github.event.inputs.LunchCMD }}
  BUILDCMD: ${{ github.event.inputs.BuildCMD }}
  TZ: Asia/Kolkata

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
       - name: Checkout
         uses: actions/checkout@master
         
       - name: Initializing environment
         run: |
            sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
            docker rmi `docker images -q`
            sudo apt-get remove account-plugin-facebook account-plugin-flickr account-plugin-jabber account-plugin-salut account-plugin-twitter account-plugin-windows-live account-plugin-yahoo aisleriot brltty duplicity empathy empathy-common example-content gnome-accessibility-themes gnome-contacts gnome-mahjongg gnome-mines gnome-orca gnome-screensaver gnome-sudoku gnome-video-effects gnomine landscape-common libreoffice-avmedia-backend-gstreamer libreoffice-base-core libreoffice-calc libreoffice-common libreoffice-core libreoffice-draw libreoffice-gnome libreoffice-gtk libreoffice-impress libreoffice-math libreoffice-ogltrans libreoffice-pdfimport libreoffice-style-galaxy libreoffice-style-human libreoffice-writer libsane libsane-common mcp-account-manager-uoa python3-uno rhythmbox rhythmbox-plugins rhythmbox-plugin-zeitgeist sane-utils shotwell shotwell-common telepathy-gabble telepathy-haze telepathy-idle telepathy-indicator telepathy-logger telepathy-mission-control-5 telepathy-salut totem totem-common totem-plugins printer-driver-brlaser printer-driver-foo2zjs printer-driver-foo2zjs-common printer-driver-m2300w printer-driver-ptouch printer-driver-splix
            git config --global user.name "ElytrA8"
            git config --global user.email "manofuranium@gmail.com"         
            sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* 
            sudo -E apt-get clean 
            sudo -E apt-get -qq update
            sudo -E apt-get -qq install bc build-essential zip curl libstdc++6 git wget python gcc clang libssl-dev repo rsync flex curl  bison aria2
            sudo curl --create-dirs -L -o /usr/local/bin/repo -O -L https://storage.googleapis.com/git-repo-downloads/repo
            sudo chmod a+rx /usr/local/bin/repo
            
       - name: Sync recovery source and device tree
         run: |
             mkdir work
             cd work
             repo init -u $MANIFEST -b $MANIFEST_BRANCH --depth=1 --groups=all,-notdefault,-device,-darwin,-x86,-mips
             repo sync -j4
             git clone $DT_LINK --depth=1 --single-branch device/$VENDOR/$DEVICE
             if [[ ! -z "$KERNEL_LINK" ]]; then git clone $KERNEL_LINK --depth=1 --single-branch $KERNEL_PATH; fi

       - name: Build
         run: |
              cd work
              . build/envsetup.sh && $LUNCHCMD && export ALLOW_MISSING_DEPENDENCIES=true && $BUILDCMD
             
       - name: Uploading recovery image
         run: |
              cd work/out/target/product/$DEVICE
              curl -sL https://git.io/file-transfer | sh
              ./transfer wet recovery.img
              ./transfer wet *.zip
